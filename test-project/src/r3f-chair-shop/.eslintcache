[{"C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\index.js":"1","C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\App.js":"2","C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\Menu.js":"3","C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\state.js":"4","C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\Section.js":"5"},{"size":197,"mtime":1611132403228,"results":"6","hashOfConfig":"7"},{"size":5296,"mtime":1611133097930,"results":"8","hashOfConfig":"7"},{"size":930,"mtime":1611132480043,"results":"9","hashOfConfig":"7"},{"size":154,"mtime":1611132552943,"results":"10","hashOfConfig":"7"},{"size":1849,"mtime":1611132520010,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1eccqpr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\index.js",[],["24","25"],"C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\App.js",["26","27"],"import React, { useRef, useEffect, useState, Suspense } from \"react\";\r\nimport \"./App.scss\";\r\n//Components\r\nimport Header from \"./Menu\";\r\nimport { Section } from \"./Section\";\r\n\r\n// Page State\r\nimport state from \"./state\";\r\n\r\n// R3F\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport { Html, useProgress, useGLTF } from \"drei\";\r\n\r\n// React Spring\r\nimport { a, useTransition } from \"@react-spring/web\";\r\n//Intersection Observer\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nfunction Model({ url }) {\r\n    const gltf = useGLTF(url, true);\r\n    return <primitive object={gltf.scene} dispose={null} />;\r\n}\r\n\r\nconst Lights = () => {\r\n    return (\r\n        <>\r\n            {/* Ambient Light illuminates lights for all objects */}\r\n            <ambientLight intensity={0.3} />\r\n            {/* Diretion light */}\r\n            <directionalLight position={[10, 10, 5]} intensity={1} />\r\n            <directionalLight\r\n                castShadow\r\n                position={[0, 10, 0]}\r\n                intensity={1.5}\r\n                shadow-mapSize-width={1024}\r\n                shadow-mapSize-height={1024}\r\n                shadow-camera-far={50}\r\n                shadow-camera-left={-10}\r\n                shadow-camera-right={10}\r\n                shadow-camera-top={10}\r\n                shadow-camera-bottom={-10}\r\n            />\r\n            {/* Spotlight Large overhead light */}\r\n            <spotLight intensity={1} position={[1000, 0, 0]} castShadow />\r\n        </>\r\n    );\r\n};\r\n\r\nconst HTMLContent = ({\r\n    domContent,\r\n    children,\r\n    bgColor,\r\n    modelPath,\r\n    position,\r\n}) => {\r\n    const ref = useRef();\r\n    useFrame(() => (ref.current.rotation.y += 0.01));\r\n    const [refItem, inView] = useInView({\r\n        threshold: 0,\r\n    });\r\n    useEffect(() => {\r\n        inView && (document.body.style.background = bgColor);\r\n    }, [inView]);\r\n    return (\r\n        <Section factor={1.5} offset={1}>\r\n            <group position={[0, position, 0]}>\r\n                <mesh ref={ref} position={[0, -35, 0]}>\r\n                    <Model url={modelPath} />\r\n                </mesh>\r\n                <Html fullscreen portal={domContent}>\r\n                    <div ref={refItem} className='container'>\r\n                        <h1 className='title'>{children}</h1>\r\n                    </div>\r\n                </Html>\r\n            </group>\r\n        </Section>\r\n    );\r\n};\r\n\r\nfunction Loader() {\r\n    const { active, progress } = useProgress();\r\n    const transition = useTransition(active, {\r\n        from: { opacity: 1, progress: 0 },\r\n        leave: { opacity: 0 },\r\n        update: { progress },\r\n    });\r\n    return transition(\r\n        ({ progress, opacity }, active) =>\r\n            active && (\r\n                <a.div className='loading' style={{ opacity }}>\r\n                    <div className='loading-bar-container'>\r\n                        <a.div className='loading-bar' style={{ width: progress }}></a.div>\r\n                    </div>\r\n                </a.div>\r\n            )\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n    const [events, setEvents] = useState();\r\n    const domContent = useRef();\r\n    const scrollArea = useRef();\r\n    const onScroll = (e) => (state.top.current = e.target.scrollTop);\r\n    useEffect(() => void onScroll({ target: scrollArea.current }), []);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            {/* R3F Canvas */}\r\n            <Canvas\r\n                concurrent\r\n                colorManagement\r\n                camera={{ position: [0, 0, 120], fov: 70 }}>\r\n                {/* Lights Component */}\r\n                <Lights />\r\n                <Suspense fallback={null}>\r\n                    <HTMLContent\r\n                        domContent={domContent}\r\n                        bgColor='#f15946'\r\n                        modelPath='/armchairYellow.gltf'\r\n                        position={250}>\r\n                        <span>Meet the new </span>\r\n                        <span>shopping experience </span>\r\n                        <span>for online chairs</span>\r\n                    </HTMLContent>\r\n                    <HTMLContent\r\n                        domContent={domContent}\r\n                        bgColor='#571ec1'\r\n                        modelPath='/armchairGreen.gltf'\r\n                        position={0}>\r\n                        <span>Shit... we even</span>\r\n                        <span>got different colors</span>\r\n                    </HTMLContent>\r\n                    <HTMLContent\r\n                        domContent={domContent}\r\n                        bgColor='#636567'\r\n                        modelPath='/armchairGray.gltf'\r\n                        position={-250}>\r\n                        <span>And yes</span>\r\n                        <span>we even got</span>\r\n                        <span>monochrome!</span>\r\n                    </HTMLContent>\r\n                </Suspense>\r\n            </Canvas>\r\n            <Loader />\r\n            <div\r\n                className='scrollArea'\r\n                ref={scrollArea}\r\n                onScroll={onScroll}\r\n                {...events}>\r\n                <div style={{ position: \"sticky\", top: 0 }} ref={domContent} />\r\n                <div style={{ height: `${state.pages * 100}vh` }} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\Menu.js",[],"C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\state.js",[],"C:\\Users\\mivebe\\Documents\\Programming\\React-stuff\\test-project\\src\\r3f-chair-shop\\src\\Section.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":63,"column":8,"nodeType":"34","endLine":63,"endColumn":16,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":100,"column":20,"nodeType":"38","messageId":"39","endLine":100,"endColumn":29},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bgColor'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-unused-vars","'setEvents' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [bgColor, inView]",{"range":"45","text":"46"},[1864,1872],"[bgColor, inView]"]